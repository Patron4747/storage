---

#Docker Profile

server:
  port: 8011

minio:
  url:  http://minio1:9000
  key:
    access: minio-access-key
    secret: minio-secret-key

redis:
  host: redis://redis
  port: 6379

spring:
  profiles: docker
  jpa:
    database: POSTGRESQL
    show-sql: true
    generate-ddl: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
  datasource:
    platform: postgres
    url: jdbc:postgresql://postgre:5432/storage
    username: postgres
    password: 58742

---

#Localhost Profile

server:
  port: 8011

minio:
  url:  http://127.0.0.1:9000
  key:
    access: minioadmin
    secret: minioadmin

redis:
  host: redis://127.0.0.1
  port: 6379

spring:
  profiles: local
  jpa:
    database: POSTGRESQL
    show-sql: true
    generate-ddl: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
  datasource:
    platform: postgres
    url: jdbc:postgresql://localhost:5432/storage
    username: postgres
    password: 58742

---

#Discovery Profile

server:
  port: 8011

minio:
  url:  http://127.0.0.1:9000
  key:
    access: minioadmin
    secret: minioadmin

redis:
  host: redis://127.0.0.1
  port: 6379

spring:
  profiles: local-discovery
  jpa:
    database: POSTGRESQL
    show-sql: true
    generate-ddl: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
  datasource:
    platform: postgres
    url: jdbc:postgresql://localhost:5432/storage
    username: postgres
    password: 58742

  application:
    name: storage

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER:http://localhost:8761/eureka}
